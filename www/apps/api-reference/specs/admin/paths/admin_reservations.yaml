get:
  operationId: GetReservations
  summary: List Reservations
  description: >-
    Retrieve a list of Reservations. The reservations can be filtered by fields
    such as `location_id` or `quantity`. The reservations can also be paginated.
  x-authenticated: true
  parameters:
    - in: query
      name: location_id
      style: form
      explode: false
      description: Filter by location ID
      schema:
        type: array
        items:
          type: string
    - in: query
      name: inventory_item_id
      style: form
      explode: false
      description: Filter by inventory item ID.
      schema:
        type: array
        items:
          type: string
    - in: query
      name: line_item_id
      style: form
      explode: false
      description: Filter by line item ID.
      schema:
        type: array
        items:
          type: string
    - in: query
      name: quantity
      description: Filter by reservation quantity
      schema:
        type: object
        properties:
          lt:
            type: number
            description: filter by reservation quantity less than this number
          gt:
            type: number
            description: filter by reservation quantity greater than this number
          lte:
            type: number
            description: filter by reservation quantity less than or equal to this number
          gte:
            type: number
            description: >-
              filter by reservation quantity greater than or equal to this
              number
    - in: query
      name: description
      description: Filter by description.
      schema:
        oneOf:
          - type: string
            description: description value to filter by.
          - type: object
            properties:
              contains:
                type: string
                description: filter by reservation description containing search string.
              starts_with:
                type: string
                description: filter by reservation description starting with search string.
              ends_with:
                type: string
                description: filter by reservation description ending with search string.
    - in: query
      name: created_at
      description: Filter by a creation date range.
      schema:
        type: object
        properties:
          lt:
            type: string
            description: filter by dates less than this date
            format: date
          gt:
            type: string
            description: filter by dates greater than this date
            format: date
          lte:
            type: string
            description: filter by dates less than or equal to this date
            format: date
          gte:
            type: string
            description: filter by dates greater than or equal to this date
            format: date
    - in: query
      name: offset
      description: The number of reservations to skip when retrieving the reservations.
      schema:
        type: integer
        default: 0
    - in: query
      name: limit
      description: Limit the number of reservations returned.
      schema:
        type: integer
        default: 20
    - in: query
      name: expand
      description: >-
        Comma-separated relations that should be expanded in the returned
        reservations.
      schema:
        type: string
    - in: query
      name: fields
      description: >-
        Comma-separated fields that should be included in the returned
        reservations.
      schema:
        type: string
  x-codegen:
    method: list
    queryParams: AdminGetReservationsParams
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/admin_reservations/get.js
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/admin_reservations/get.sh
  security:
    - api_token: []
    - cookie_auth: []
    - jwt_token: []
  tags:
    - Reservations
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AdminReservationsListRes.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
post:
  operationId: PostReservations
  summary: Create a Reservation
  description: >-
    Create a Reservation which can be associated with any resource, such as an
    order's line item.
  x-authenticated: true
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/AdminPostReservationsReq.yaml
  x-codeSamples:
    - lang: JavaScript
      label: JS Client
      source:
        $ref: ../code_samples/JavaScript/admin_reservations/post.js
    - lang: Shell
      label: cURL
      source:
        $ref: ../code_samples/Shell/admin_reservations/post.sh
  security:
    - api_token: []
    - cookie_auth: []
    - jwt_token: []
  tags:
    - Reservations
  responses:
    '200':
      description: OK
      content:
        application/json:
          schema:
            $ref: ../components/schemas/AdminReservationsRes.yaml
    '400':
      $ref: ../components/responses/400_error.yaml
    '401':
      $ref: ../components/responses/unauthorized.yaml
    '404':
      $ref: ../components/responses/not_found_error.yaml
    '409':
      $ref: ../components/responses/invalid_state_error.yaml
    '422':
      $ref: ../components/responses/invalid_request_error.yaml
    '500':
      $ref: ../components/responses/500_error.yaml
